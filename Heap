///   ***   ---   |         In the name of ALLAH        |||   ---   ***   ///



#include<bits/stdc++.h>
using namespace std;


typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
typedef pair<int,int> pii;
typedef pair<double, double> pdd;
typedef pair<ll, ll> pll;
typedef vector<pii> vii;
typedef vector<pll> vll;
typedef double dl;

#define endl '\n'
#define PB push_back
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()
#define sz(x) (int)x.size()

const double PI = acos(-1);
const double eps = 1e-9;
const int inf = 2000000000;
const ll infLL = 9000000000000000000;
#define MOD 1000000007

#define mem(a,b) memset(a, b, sizeof(a) )
#define sqr(a) ((a) * (a))

#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define fraction() cout.unsetf(ios::floatfield); cout.precision(10); cout.setf(ios::fixed,ios::floatfield);
#define file() freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);

#define dbg(args...) do {cerr << #args << " : "; faltu(args); } while(0)
void faltu () {            cerr << endl;}
template < typename T, typename ... hello>void faltu( T arg, const hello &... rest) {cerr << arg << ' ';faltu(rest...);}

ll gcd ( ll a, ll b ) { return __gcd ( a, b ); }
ll lcm ( ll a, ll b ) { return a * ( b / gcd ( a, b ) ); }
int arr[100];
int sz=0;
int n;
void Insert(int val)
{
    sz=sz+1;
    int index=sz;
    arr[index]=val;
    while(index>1){
        int parent=index/2;
        if(arr[parent]<arr[index]){
            swap(arr[parent],arr[index]);
            index=parent;
        }
        else return;
    }
}
void heapify(int prnt,int size)
{
    int leftChild=prnt*2;
    int rightChild=prnt*2+1;
    int largest=prnt;
    if(leftChild<=size && arr[leftChild]>arr[prnt]) largest=leftChild;
    if(rightChild<=size && arr[rightChild]>arr[largest]) largest=rightChild;
    if(largest!=prnt){
        swap(arr[largest],arr[prnt]);
        heapify(largest,size);
    }
}
void deleteNode(int pos)
{
   swap(arr[pos],arr[n]) ;
    
  
   int size=n-1;
   for(int i=size/2;i>0;i--){
       heapify(i,size); 
   }
  
}
int main()
{
    optimize();
   
   cin>>n;
   for(int i=1;i<=n;i++){
       int val;
       cin>>val;
       Insert(val);//complexity of O(n log n)
   }
    for(int i=1;i<=sz;i++) cout<<arr[i]<<" ";
    cout<<endl;
    int position;
    cin>> position;
    deleteNode(position);//complexity of O(n log n)
    cout<<"Afer delete the node"<<endl;
    for(int i=1;i<sz;i++) cout<<arr[i]<<" ";
     cout<<endl;
    //overall time complexity is O(nlogn );
    // YouTube link:https://www.youtube.com/watch?v=NKJnHewiGdc&ab_channel=CodeHelp-byBabbar
   return 0;
}
